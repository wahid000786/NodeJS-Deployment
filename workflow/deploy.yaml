name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Amazon ECR
      env:
        AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build and push Docker image
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      run: |
        docker build -t $ECR_REPOSITORY:latest .
        docker tag $ECR_REPOSITORY:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest

    - name: Register task definition in ECS
      id: task-def
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        ECS_TASK_DEFINITION: ${{ secrets.ECS_TASK_DEFINITION }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        TASK_TEMPLATE=$(cat task-definition.json)
        TASK_DEFINITION=$(echo "$TASK_TEMPLATE" | sed -e "s|<IMAGE>|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$ECR_REPOSITORY:latest|g")
        echo "$TASK_DEFINITION" > task-definition.json
        aws ecs register-task-definition \
          --cli-input-json file://task-definition.json

    - name: Deploy to ECS
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
        ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
        ECS_TASK_DEFINITION: ${{ secrets.ECS_TASK_DEFINITION }}
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment
